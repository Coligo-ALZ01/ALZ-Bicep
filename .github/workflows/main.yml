name: ALZ GitHub Actions deployment pipeline

on: [workflow_dispatch]

env:
  ManagementGroupPrefix: "alz-Sncon"
  TopLevelManagementGroupDisplayName: "Azure Landing Zones - SNCON"
  Location: "westeurope"
  LoggingSubId: "43e92514-dbec-4a0a-b3bc-1e7e358c6779"
  LoggingResourceGroupName: "alz-logging"
  HubNetworkSubId: "43e92514-dbec-4a0a-b3bc-1e7e358c6779"
  HubNetworkResourceGroupName: "Hub_Networking_POC"
  RoleAssignmentManagementGroupId: "alz-platform"
  SpokeNetworkSubId: "43e92514-dbec-4a0a-b3bc-1e7e358c6779"
  SpokeNetworkResourceGroupName: "Spoke_Networking_POC"
  runNumber: ${{ github.run_number }}

jobs:
  bicep_tenant_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'

      - name: Az CLI Deploy Management Groups
        id: create_mgs
        shell: bash
        run: |
            az deployment tenant create --template-file infra-as-code/bicep/modules/managementGroups/managementGroups.bicep --parameters parTopLevelManagementGroupPrefix=${{ env.ManagementGroupPrefix }} parTopLevelManagementGroupDisplayName="${{ env.TopLevelManagementGroupDisplayName }}" --location ${{ env.Location }} --name create_mgs-${{ env.runNumber }}

      - name: Deploy Custom Policy Definitions
        id: create_policy_defs
        uses: azure/arm-deploy@v1
        with:
          scope: managementgroup
          managementGroupId: ${{ env.ManagementGroupPrefix }}
          region: ${{ env.Location }}
          template: infra-as-code/bicep/modules/policy/definitions/customPolicyDefinitions.bicep
          parameters: infra-as-code/bicep/modules/policy/definitions/parameters/customPolicyDefinitions.parameters.all.json
          deploymentName: create_policy_defs-${{ env.runNumber }}
          failOnStdErr: false

      - name: Deploy Custom Role Definitions
        id: create_rbac_roles
        uses: azure/arm-deploy@v1
        with:
          scope: managementgroup
          managementGroupId: ${{ env.ManagementGroupPrefix }}
          region: ${{ env.Location }}
          template: infra-as-code/bicep/modules/customRoleDefinitions/customRoleDefinitions.bicep
          parameters: infra-as-code/bicep/modules/customRoleDefinitions/parameters/customRoleDefinitions.parameters.all.json
          deploymentName: create_rbac_roles-${{ env.runNumber }}
          failOnStdErr: false
